// Code generated by MockGen. DO NOT EDIT.
// Source: hotel_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	payloads "github.com/tktanisha/booking_system/internal/api/validators/payloads"
	models "github.com/tktanisha/booking_system/internal/models"
)

// MockHotelServiceInterface is a mock of HotelServiceInterface interface.
type MockHotelServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHotelServiceInterfaceMockRecorder
}

// MockHotelServiceInterfaceMockRecorder is the mock recorder for MockHotelServiceInterface.
type MockHotelServiceInterfaceMockRecorder struct {
	mock *MockHotelServiceInterface
}

// NewMockHotelServiceInterface creates a new mock instance.
func NewMockHotelServiceInterface(ctrl *gomock.Controller) *MockHotelServiceInterface {
	mock := &MockHotelServiceInterface{ctrl: ctrl}
	mock.recorder = &MockHotelServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHotelServiceInterface) EXPECT() *MockHotelServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateHotel mocks base method.
func (m *MockHotelServiceInterface) CreateHotel(arg0 *models.UserContext, arg1 *payloads.CreateHotelPayload) (*models.Hotels, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateHotel", arg0, arg1)
	ret0, _ := ret[0].(*models.Hotels)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateHotel indicates an expected call of CreateHotel.
func (mr *MockHotelServiceInterfaceMockRecorder) CreateHotel(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateHotel", reflect.TypeOf((*MockHotelServiceInterface)(nil).CreateHotel), arg0, arg1)
}

// GetHotelByID mocks base method.
func (m *MockHotelServiceInterface) GetHotelByID(arg0 uuid.UUID) (*models.Hotels, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHotelByID", arg0)
	ret0, _ := ret[0].(*models.Hotels)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHotelByID indicates an expected call of GetHotelByID.
func (mr *MockHotelServiceInterfaceMockRecorder) GetHotelByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHotelByID", reflect.TypeOf((*MockHotelServiceInterface)(nil).GetHotelByID), arg0)
}
