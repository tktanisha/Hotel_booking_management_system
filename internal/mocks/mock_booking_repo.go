// Code generated by MockGen. DO NOT EDIT.
// Source: booking_repo_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	models "github.com/tktanisha/booking_system/internal/models"
)

// MockBookingRepoInterface is a mock of BookingRepoInterface interface.
type MockBookingRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBookingRepoInterfaceMockRecorder
}

// MockBookingRepoInterfaceMockRecorder is the mock recorder for MockBookingRepoInterface.
type MockBookingRepoInterfaceMockRecorder struct {
	mock *MockBookingRepoInterface
}

// NewMockBookingRepoInterface creates a new mock instance.
func NewMockBookingRepoInterface(ctrl *gomock.Controller) *MockBookingRepoInterface {
	mock := &MockBookingRepoInterface{ctrl: ctrl}
	mock.recorder = &MockBookingRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBookingRepoInterface) EXPECT() *MockBookingRepoInterfaceMockRecorder {
	return m.recorder
}

// CreateBookingWithRooms mocks base method.
func (m *MockBookingRepoInterface) CreateBookingWithRooms(arg0 *models.Bookings, arg1 []*models.BookedRooms) (*models.Bookings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBookingWithRooms", arg0, arg1)
	ret0, _ := ret[0].(*models.Bookings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBookingWithRooms indicates an expected call of CreateBookingWithRooms.
func (mr *MockBookingRepoInterfaceMockRecorder) CreateBookingWithRooms(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBookingWithRooms", reflect.TypeOf((*MockBookingRepoInterface)(nil).CreateBookingWithRooms), arg0, arg1)
}

// GetBookedRoomsByBookingId mocks base method.
func (m *MockBookingRepoInterface) GetBookedRoomsByBookingId(arg0 uuid.UUID) ([]*models.BookedRooms, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBookedRoomsByBookingId", arg0)
	ret0, _ := ret[0].([]*models.BookedRooms)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBookedRoomsByBookingId indicates an expected call of GetBookedRoomsByBookingId.
func (mr *MockBookingRepoInterfaceMockRecorder) GetBookedRoomsByBookingId(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBookedRoomsByBookingId", reflect.TypeOf((*MockBookingRepoInterface)(nil).GetBookedRoomsByBookingId), arg0)
}

// GetBookingById mocks base method.
func (m *MockBookingRepoInterface) GetBookingById(arg0 uuid.UUID) (*models.Bookings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBookingById", arg0)
	ret0, _ := ret[0].(*models.Bookings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBookingById indicates an expected call of GetBookingById.
func (mr *MockBookingRepoInterfaceMockRecorder) GetBookingById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBookingById", reflect.TypeOf((*MockBookingRepoInterface)(nil).GetBookingById), arg0)
}

// Save mocks base method.
func (m *MockBookingRepoInterface) Save(arg0 *models.Bookings) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockBookingRepoInterfaceMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockBookingRepoInterface)(nil).Save), arg0)
}
