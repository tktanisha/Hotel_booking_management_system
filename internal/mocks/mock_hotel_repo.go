// Code generated by MockGen. DO NOT EDIT.
// Source: hotel_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	models "github.com/tktanisha/booking_system/internal/models"
)

// MockHotelRepositoryInterface is a mock of HotelRepositoryInterface interface.
type MockHotelRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHotelRepositoryInterfaceMockRecorder
}

// MockHotelRepositoryInterfaceMockRecorder is the mock recorder for MockHotelRepositoryInterface.
type MockHotelRepositoryInterfaceMockRecorder struct {
	mock *MockHotelRepositoryInterface
}

// NewMockHotelRepositoryInterface creates a new mock instance.
func NewMockHotelRepositoryInterface(ctrl *gomock.Controller) *MockHotelRepositoryInterface {
	mock := &MockHotelRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockHotelRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHotelRepositoryInterface) EXPECT() *MockHotelRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateHotel mocks base method.
func (m *MockHotelRepositoryInterface) CreateHotel(arg0 *models.Hotels) (*models.Hotels, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateHotel", arg0)
	ret0, _ := ret[0].(*models.Hotels)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateHotel indicates an expected call of CreateHotel.
func (mr *MockHotelRepositoryInterfaceMockRecorder) CreateHotel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateHotel", reflect.TypeOf((*MockHotelRepositoryInterface)(nil).CreateHotel), arg0)
}

// GetHotelByID mocks base method.
func (m *MockHotelRepositoryInterface) GetHotelByID(arg0 uuid.UUID) (*models.Hotels, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHotelByID", arg0)
	ret0, _ := ret[0].(*models.Hotels)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHotelByID indicates an expected call of GetHotelByID.
func (mr *MockHotelRepositoryInterfaceMockRecorder) GetHotelByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHotelByID", reflect.TypeOf((*MockHotelRepositoryInterface)(nil).GetHotelByID), arg0)
}
