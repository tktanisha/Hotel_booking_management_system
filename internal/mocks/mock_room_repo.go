// Code generated by MockGen. DO NOT EDIT.
// Source: room_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	models "github.com/tktanisha/booking_system/internal/models"
)

// MockRoomRepoInterface is a mock of RoomRepoInterface interface.
type MockRoomRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRoomRepoInterfaceMockRecorder
}

// MockRoomRepoInterfaceMockRecorder is the mock recorder for MockRoomRepoInterface.
type MockRoomRepoInterfaceMockRecorder struct {
	mock *MockRoomRepoInterface
}

// NewMockRoomRepoInterface creates a new mock instance.
func NewMockRoomRepoInterface(ctrl *gomock.Controller) *MockRoomRepoInterface {
	mock := &MockRoomRepoInterface{ctrl: ctrl}
	mock.recorder = &MockRoomRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoomRepoInterface) EXPECT() *MockRoomRepoInterfaceMockRecorder {
	return m.recorder
}

// CreateRoom mocks base method.
func (m *MockRoomRepoInterface) CreateRoom(arg0 *models.Rooms) (*models.Rooms, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRoom", arg0)
	ret0, _ := ret[0].(*models.Rooms)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRoom indicates an expected call of CreateRoom.
func (mr *MockRoomRepoInterfaceMockRecorder) CreateRoom(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRoom", reflect.TypeOf((*MockRoomRepoInterface)(nil).CreateRoom), arg0)
}

// GetAllRoomByHotelID mocks base method.
func (m *MockRoomRepoInterface) GetAllRoomByHotelID(hotelID uuid.UUID) ([]*models.Rooms, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllRoomByHotelID", hotelID)
	ret0, _ := ret[0].([]*models.Rooms)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllRoomByHotelID indicates an expected call of GetAllRoomByHotelID.
func (mr *MockRoomRepoInterfaceMockRecorder) GetAllRoomByHotelID(hotelID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllRoomByHotelID", reflect.TypeOf((*MockRoomRepoInterface)(nil).GetAllRoomByHotelID), hotelID)
}

// UpdateRoom mocks base method.
func (m *MockRoomRepoInterface) UpdateRoom(arg0 *models.Rooms) (*models.Rooms, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRoom", arg0)
	ret0, _ := ret[0].(*models.Rooms)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateRoom indicates an expected call of UpdateRoom.
func (mr *MockRoomRepoInterfaceMockRecorder) UpdateRoom(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRoom", reflect.TypeOf((*MockRoomRepoInterface)(nil).UpdateRoom), arg0)
}
